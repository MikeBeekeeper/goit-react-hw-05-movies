{"version":3,"file":"static/js/41.4f131020.chunk.js","mappings":"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","sources":["helpers/FetchAPI.js","helpers/GetImages.js","components/backLink/BackLink.js","components/movieCard/MovieCard.styled.js","components/movieCard/MovieCard.js","pages/MovieDetailsPage.js"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = 'e921f15ae860f6e4269e7dedfe9b8c39';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(`trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n\n  return response.data.results;\n};\n\nfetchMovieDetails.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nfetchCast.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nfetchReviews.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nfetchMoviesByQuery.propTypes = {\n  id: PropTypes.string.isRequired,\n};","import PropTypes from 'prop-types';\n\nexport const getImage = image => {\n  if (image) return `https://image.tmdb.org/t/p/w500${image}`;\n};\n\ngetImage.propTypes = {\n  image: PropTypes.string.isRequired,\n};","import { useRef } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst BackLink = () => {\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/movies');\n\n  return (\n    <button>\n      <Link to={backLinkHref.current}>Go back</Link>\n    </button>\n  );\n};\n\nexport default BackLink;\n","import styled from '@emotion/styled';\n\nexport const Info = styled.div`\n  margin-left: 12px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  border-top: 1px solid grey;\n  border-bottom: 1px solid grey;\n  margin-top: 8px;\n  margin-bottom: 8px;\n`;\n","import { Suspense } from 'react';\nimport { fetchMovieDetails } from '../../helpers/FetchAPI.js';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useParams } from 'react-router-dom';\nimport { getImage } from '../../helpers/GetImages.js';\nimport { AdditionalInfo, Info } from './MovieCard.styled';\n\nconst MovieCard = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const { id } = useParams();\n  const { poster_path, title, vote_average, overview, genres } = movieDetails;\n\n  useEffect(() => {\n    fetchMovieDetails(id).then(setMovieDetails);\n  }, [id]);\n\n  const getGanres = () => {\n    if (genres) return genres.map(el => el.name).join(' ');\n  };\n\n  return (\n    <>\n      <div style={{ display: 'flex' }}>\n        <img src={getImage(poster_path)} alt=\"poster\" width={240} />\n        <Info>\n          <h2>{title}</h2>\n          <p>User score: {vote_average}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{getGanres()}</p>\n        </Info>\n      </div>\n      <AdditionalInfo>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </AdditionalInfo>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieCard;\n","import BackLink from '../components/backLink/BackLink.js';\nimport MovieCard from '../components/movieCard/MovieCard.js';\n\nconst MovieDetailsPage = () => {\n  return (\n    <>\n      <BackLink>Go back</BackLink>\n      <MovieCard />\n    </>\n  );\n};\n\nexport default MovieDetailsPage;"],"names":["API_KEY","axios","fetchTrendMovies","params","api_key","response","data","results","fetchMovieDetails","id","fetchCast","cast","fetchReviews","fetchMoviesByQuery","query","propTypes","PropTypes","getImage","image","location","useLocation","backLinkHref","useRef","state","from","to","current","Info","styled","AdditionalInfo","useState","movieDetails","setMovieDetails","useParams","poster_path","title","vote_average","overview","genres","useEffect","then","style","display","src","alt","width","map","el","name","join","getGanres","Suspense","fallback"],"sourceRoot":""}