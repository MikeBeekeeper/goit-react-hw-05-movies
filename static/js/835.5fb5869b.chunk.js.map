{"version":3,"file":"static/js/835.5fb5869b.chunk.js","mappings":"8TAGMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAgB,mCAAG,oGACPD,EAAAA,EAAAA,IAAA,sBAAiC,CACtDE,OAAQ,CACNC,QAASJ,KAHiB,cACxBK,EADwB,yBAMvBA,EAASC,KAAKC,SANS,2CAAH,qDAShBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRR,EAAAA,EAAAA,IAAA,gBAAmBQ,GAAM,CAC9CN,OAAQ,CACNC,QAASJ,KAHkB,cACzBK,EADyB,yBAMxBA,EAASC,MANe,2CAAH,sDASjBI,EAAS,mCAAG,WAAMD,GAAN,uFACAR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,YAAiC,CACtDN,OAAQ,CACNC,QAASJ,KAHU,cACjBK,EADiB,yBAMhBA,EAASC,KAAKK,MANE,2CAAH,sDASTC,EAAY,mCAAG,WAAMH,GAAN,uFACHR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,YAAiC,CACtDN,OAAQ,CACNC,QAASJ,KAHa,cACpBK,EADoB,yBAMnBA,EAASC,KAAKC,SANK,2CAAH,sDASZM,EAAkB,mCAAG,WAAMC,GAAN,uFACTb,EAAAA,EAAAA,IAAA,gBAA2B,CAChDE,OAAQ,CACNC,QAASJ,EACTc,MAAAA,KAJ4B,cAC1BT,EAD0B,yBAQzBA,EAASC,KAAKC,SARW,2CAAH,sDAW/BC,EAAkBO,UAAY,CAC5BN,GAAIO,IAAAA,OAAAA,YAGNN,EAAUK,UAAY,CACpBN,GAAIO,IAAAA,OAAAA,YAGNJ,EAAaG,UAAY,CACvBN,GAAIO,IAAAA,OAAAA,YAGNH,EAAmBE,UAAY,CAC7BN,GAAIO,IAAAA,OAAAA,W,sKChEOC,EAAQC,EAAAA,EAAAA,MAAH,uKAWLC,EAASD,EAAAA,EAAAA,OAAH,2LAYNE,EAAWF,EAAAA,EAAAA,GAAH,mE,SCmCrB,EAvDkB,WAChB,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAO,IAAD,0CAKd,qGAC0BlB,EAAAA,EAAAA,IAAmBc,EAAaK,IAAI,UAD9D,OACQC,EADR,OAEEV,EAAUU,GAFZ,4CALc,sBACO,KAAjBN,IAEJF,EAAa,UAACE,EAAaK,IAAI,gBAAlB,QAA8B,IAH7B,mCAUdE,GAED,GAAE,IAaH,OACE,iCACE,kBAAMC,SAbW,SAAAC,GACnBA,EAAEC,iBAEFT,EAD6B,KAAfJ,EAAoB,CAAEV,MAAOU,GAAe,CAAC,IAE3DX,EAAAA,EAAAA,IAAmBW,GAAYc,KAAKf,GAAWgB,MAAMC,QAAQC,MAC9D,EAQG,WACE,SAACxB,EAAD,CACEyB,KAAK,QACLC,KAAK,OACLC,MAAOpB,EACPqB,SAXa,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MAChCnB,EAAcmB,EACf,KAWK,SAACzB,EAAD,CAAQwB,KAAK,SAAb,wBAEF,wBACGrB,EAAOyB,KAAI,gBAAGtC,EAAH,EAAGA,GAAIuC,EAAP,EAAOA,MAAP,OACV,SAAC5B,EAAD,WACE,SAAC,KAAD,CAAM6B,GAAE,UAAKxC,GAAMyC,MAAO,CAAEC,KAAMtB,GAAlC,SACGmB,KAFUvC,EADL,QAUnB,EChDD,EARmB,WACjB,OACE,2BACE,SAAC,EAAD,KAGL,C","sources":["helpers/FetchAPI.js","components/searchBar/searchBar.styled.js","components/searchBar/searchBar.js","pages/moviesPage.js"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = 'e921f15ae860f6e4269e7dedfe9b8c39';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(`trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n\n  return response.data.results;\n};\n\nfetchMovieDetails.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nfetchCast.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nfetchReviews.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nfetchMoviesByQuery.propTypes = {\n  id: PropTypes.string.isRequired,\n};","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  padding: 4px;\n  width: 400px;\n  border-radius: 8px;\n  font-size: 16px;\n  &:focus {\n    background-color: blue;\n    color: white;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 4px 8px;\n  border-radius: 8px;\n  margin-left: 5px;\n  font-size: 16px;\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: blue;\n  }\n`;\n\nexport const ListItem = styled.li`\n  font-size: 20px;\n  margin-bottom: 8px;\n`;","import { fetchMoviesByQuery } from '../../helpers/FetchAPI.js';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { Button, Input, ListItem } from './searchBar.styled';\n\nconst SearchBar = () => {\n  const [movies, setMovies] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (searchParams === '') return;\n\n    setInputValue(searchParams.get('query') ?? '');\n\n    async function fetchMovieList() {\n      const movieList = await fetchMoviesByQuery(searchParams.get('query'));\n      setMovies(movieList);\n    }\n\n    fetchMovieList();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const query = inputValue !== '' ? { query: inputValue } : {};\n    setSearchParams(query);\n    fetchMoviesByQuery(inputValue).then(setMovies).catch(console.error);\n  };\n\n  const handleChange = ({ target: { value } }) => {\n    setInputValue(value);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <Input\n          name=\"query\"\n          type=\"text\"\n          value={inputValue}\n          onChange={handleChange}\n        />\n        <Button type=\"sumbit\">Search</Button>\n      </form>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <ListItem key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </ListItem>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default SearchBar;\n","import SearchBar from '../components/searchBar/searchBar.js';\n\nconst MoviesPage = () => {\n  return (\n    <main>\n      <SearchBar />\n    </main>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["API_KEY","axios","fetchTrendMovies","params","api_key","response","data","results","fetchMovieDetails","id","fetchCast","cast","fetchReviews","fetchMoviesByQuery","query","propTypes","PropTypes","Input","styled","Button","ListItem","useState","movies","setMovies","inputValue","setInputValue","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","get","movieList","fetchMovieList","onSubmit","e","preventDefault","then","catch","console","error","name","type","value","onChange","target","map","title","to","state","from"],"sourceRoot":""}