{"version":3,"file":"static/js/396.ed584995.chunk.js","mappings":"8LAgCA,UA5BgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GASR,OAPAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAAII,MAAK,SAAAC,GACI,IAApBA,EAASC,QAAcP,EAAW,MAClCM,EAASC,OAAS,GAAGP,EAAWM,EACrC,GACF,GAAE,CAACL,KAGF,iCACIF,IAAW,qEACZA,IACC,wBACGA,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAST,EAApB,EAAoBA,GAApB,OACX,2BACE,qCAAaQ,MACb,uBAAIC,MAFGT,EADE,QAUtB,C,8MC3BKU,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAgB,mCAAG,oGACPD,EAAAA,EAAAA,IAAA,sBAAiC,CACtDE,OAAQ,CACNC,QAASJ,KAHiB,cACxBL,EADwB,yBAMvBA,EAASU,KAAKC,SANS,2CAAH,qDAShBC,EAAiB,mCAAG,WAAMjB,GAAN,uFACRW,EAAAA,EAAAA,IAAA,gBAAmBX,GAAM,CAC9Ca,OAAQ,CACNC,QAASJ,KAHkB,cACzBL,EADyB,yBAMxBA,EAASU,MANe,2CAAH,sDASjBG,EAAS,mCAAG,WAAMlB,GAAN,uFACAW,EAAAA,EAAAA,IAAA,gBAAmBX,EAAnB,YAAiC,CACtDa,OAAQ,CACNC,QAASJ,KAHU,cACjBL,EADiB,yBAMhBA,EAASU,KAAKI,MANE,2CAAH,sDASThB,EAAY,mCAAG,WAAMH,GAAN,uFACHW,EAAAA,EAAAA,IAAA,gBAAmBX,EAAnB,YAAiC,CACtDa,OAAQ,CACNC,QAASJ,KAHa,cACpBL,EADoB,yBAMnBA,EAASU,KAAKC,SANK,2CAAH,sDASZI,EAAkB,mCAAG,WAAMC,GAAN,uFACTV,EAAAA,EAAAA,IAAA,gBAA2B,CAChDE,OAAQ,CACNC,QAASJ,EACTW,MAAAA,KAJ4B,cAC1BhB,EAD0B,yBAQzBA,EAASU,KAAKC,SARW,2CAAH,sDAW/BC,EAAkBK,UAAY,CAC5BtB,GAAIuB,IAAAA,OAAAA,YAGNL,EAAUI,UAAY,CACpBtB,GAAIuB,IAAAA,OAAAA,YAGNpB,EAAamB,UAAY,CACvBtB,GAAIuB,IAAAA,OAAAA,YAGNH,EAAmBE,UAAY,CAC7BtB,GAAIuB,IAAAA,OAAAA,W","sources":["components/review/Review.js","helpers/FetchAPI.js"],"sourcesContent":["import { fetchReviews } from '../../helpers/FetchAPI.js';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchReviews(id).then(response => {\n      if (response.length === 0) setReviews(null);\n      if (response.length > 0) setReviews(response);\n    });\n  }, [id]);\n\n  return (\n    <>\n      {!reviews && <p>We don't have any rewiews for this movie </p>}\n      {reviews && (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <h4>Author: {author}</h4>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = 'e921f15ae860f6e4269e7dedfe9b8c39';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(`trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  });\n\n  return response.data.results;\n};\n\nfetchMovieDetails.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nfetchCast.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nfetchReviews.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nfetchMoviesByQuery.propTypes = {\n  id: PropTypes.string.isRequired,\n};"],"names":["useState","reviews","setReviews","id","useParams","useEffect","fetchReviews","then","response","length","map","author","content","API_KEY","axios","fetchTrendMovies","params","api_key","data","results","fetchMovieDetails","fetchCast","cast","fetchMoviesByQuery","query","propTypes","PropTypes"],"sourceRoot":""}